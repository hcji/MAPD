// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// waveft
NumericMatrix waveft(NumericVector omega, NumericVector scales);
RcppExport SEXP _WMPD_waveft(SEXP omegaSEXP, SEXP scalesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type omega(omegaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scales(scalesSEXP);
    rcpp_result_gen = Rcpp::wrap(waveft(omega, scales));
    return rcpp_result_gen;
END_RCPP
}
// cwtft
List cwtft(NumericVector val, NumericVector scales);
RcppExport SEXP _WMPD_cwtft(SEXP valSEXP, SEXP scalesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type val(valSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type scales(scalesSEXP);
    rcpp_result_gen = Rcpp::wrap(cwtft(val, scales));
    return rcpp_result_gen;
END_RCPP
}
// localMax
LogicalMatrix localMax(NumericMatrix cwt2d);
RcppExport SEXP _WMPD_localMax(SEXP cwt2dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type cwt2d(cwt2dSEXP);
    rcpp_result_gen = Rcpp::wrap(localMax(cwt2d));
    return rcpp_result_gen;
END_RCPP
}
// localMin
LogicalMatrix localMin(NumericMatrix cwt2d);
RcppExport SEXP _WMPD_localMin(SEXP cwt2dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type cwt2d(cwt2dSEXP);
    rcpp_result_gen = Rcpp::wrap(localMin(cwt2d));
    return rcpp_result_gen;
END_RCPP
}
// ridgesDetection
List ridgesDetection(NumericMatrix cwt2d, NumericVector val);
RcppExport SEXP _WMPD_ridgesDetection(SEXP cwt2dSEXP, SEXP valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type cwt2d(cwt2dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type val(valSEXP);
    rcpp_result_gen = Rcpp::wrap(ridgesDetection(cwt2d, val));
    return rcpp_result_gen;
END_RCPP
}
// peaksPosition
NumericVector peaksPosition(NumericVector val, List ridges, NumericMatrix cwt2d);
RcppExport SEXP _WMPD_peaksPosition(SEXP valSEXP, SEXP ridgesSEXP, SEXP cwt2dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type val(valSEXP);
    Rcpp::traits::input_parameter< List >::type ridges(ridgesSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type cwt2d(cwt2dSEXP);
    rcpp_result_gen = Rcpp::wrap(peaksPosition(val, ridges, cwt2d));
    return rcpp_result_gen;
END_RCPP
}
// getSignal
List getSignal(NumericMatrix cwt2d, List ridges, NumericVector peaks);
RcppExport SEXP _WMPD_getSignal(SEXP cwt2dSEXP, SEXP ridgesSEXP, SEXP peaksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type cwt2d(cwt2dSEXP);
    Rcpp::traits::input_parameter< List >::type ridges(ridgesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type peaks(peaksSEXP);
    rcpp_result_gen = Rcpp::wrap(getSignal(cwt2d, ridges, peaks));
    return rcpp_result_gen;
END_RCPP
}
// find_closest
int find_closest(const int seed, const int scan, const IntegerVector scans, const NumericVector mzs, const IntegerVector clu, const double tol);
RcppExport SEXP _WMPD_find_closest(SEXP seedSEXP, SEXP scanSEXP, SEXP scansSEXP, SEXP mzsSEXP, SEXP cluSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< const int >::type scan(scanSEXP);
    Rcpp::traits::input_parameter< const IntegerVector >::type scans(scansSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type mzs(mzsSEXP);
    Rcpp::traits::input_parameter< const IntegerVector >::type clu(cluSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(find_closest(seed, scan, scans, mzs, clu, tol));
    return rcpp_result_gen;
END_RCPP
}
// get_trace
List get_trace(const int seed, const IntegerVector scans, const NumericVector mzs, IntegerVector clu, double tol);
RcppExport SEXP _WMPD_get_trace(SEXP seedSEXP, SEXP scansSEXP, SEXP mzsSEXP, SEXP cluSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< const IntegerVector >::type scans(scansSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type mzs(mzsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clu(cluSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(get_trace(seed, scans, mzs, clu, tol));
    return rcpp_result_gen;
END_RCPP
}
// getROI
IntegerVector getROI(int seed, IntegerVector scans, NumericVector mzs, NumericVector ints, double mztol, int max_width);
RcppExport SEXP _WMPD_getROI(SEXP seedSEXP, SEXP scansSEXP, SEXP mzsSEXP, SEXP intsSEXP, SEXP mztolSEXP, SEXP max_widthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type scans(scansSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mzs(mzsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ints(intsSEXP);
    Rcpp::traits::input_parameter< double >::type mztol(mztolSEXP);
    Rcpp::traits::input_parameter< int >::type max_width(max_widthSEXP);
    rcpp_result_gen = Rcpp::wrap(getROI(seed, scans, mzs, ints, mztol, max_width));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_WMPD_waveft", (DL_FUNC) &_WMPD_waveft, 2},
    {"_WMPD_cwtft", (DL_FUNC) &_WMPD_cwtft, 2},
    {"_WMPD_localMax", (DL_FUNC) &_WMPD_localMax, 1},
    {"_WMPD_localMin", (DL_FUNC) &_WMPD_localMin, 1},
    {"_WMPD_ridgesDetection", (DL_FUNC) &_WMPD_ridgesDetection, 2},
    {"_WMPD_peaksPosition", (DL_FUNC) &_WMPD_peaksPosition, 3},
    {"_WMPD_getSignal", (DL_FUNC) &_WMPD_getSignal, 3},
    {"_WMPD_find_closest", (DL_FUNC) &_WMPD_find_closest, 6},
    {"_WMPD_get_trace", (DL_FUNC) &_WMPD_get_trace, 5},
    {"_WMPD_getROI", (DL_FUNC) &_WMPD_getROI, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_WMPD(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
